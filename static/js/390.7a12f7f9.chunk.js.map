{"version":3,"file":"static/js/390.7a12f7f9.chunk.js","mappings":"4SAYAA,EAAAA,EAAAA,OACO,IAwKHC,EAA2BC,EAAAA,YAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAWF,EAAME,SACjBC,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAeL,EAAMM,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9CE,EAAmBP,EAAMQ,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAkBV,EAAMW,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwBZ,EAAMa,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAC9DE,EAAwBd,EAAMe,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAuBhB,EAAMiB,cAC7BA,OAAyC,IAAzBD,GAA0CA,EAC1DE,EAAmBlB,EAAMmB,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAqBpB,EAAMqB,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DE,EAActB,EAAMuB,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3CE,EAAiBxB,EAAMyB,QACvBA,OAA6B,IAAnBD,EAA4B,WAAaA,EACnDE,GAAQC,EAAAA,EAAAA,GAAyB3B,EAAO,CAAC,WAAY,UAAW,YAAa,QAAS,YAAa,WAAY,mBAAoB,qBAAsB,gBAAiB,YAAa,cAAe,OAAQ,YAE9M4B,GAAkBC,EAAAA,EAAAA,GAAK1B,EAAQ2B,QAAS3B,EAAQ,UAAU4B,QAAOC,EAAAA,EAAAA,GAAWX,KAAgBlB,EAAQ,UAAU4B,QAAOC,EAAAA,EAAAA,GAAWP,KAAYtB,EAAQ,UAAU4B,QAAOC,EAAAA,EAAAA,GAAWP,IAAUM,QAAOC,EAAAA,EAAAA,GAAWX,KAAgBlB,EAAQ,UAAU4B,QAAOC,EAAAA,EAAAA,GAAWP,IAAUM,OAAiB,YAAVzB,GAAsB0B,EAAAA,EAAAA,GAAW1B,GAAS,KAAMK,GAAYR,EAAQQ,UACzV,OAAoBZ,EAAAA,cAAoBU,GAAWwB,EAAAA,EAAAA,GAAS,CAC1DC,KAAM,QACN9B,WAAWyB,EAAAA,EAAAA,GAAK1B,EAAQgC,KAAM/B,EAAWe,GAAahB,EAAQgB,UAAWN,GAAoBV,EAAQU,iBAA8B,cAAZY,GAA2BtB,EAAQiC,UAA2B,aAAhBf,GAA8BlB,EAAQkC,UAC3MpC,IAAKA,GACJyB,GAAQ3B,EAAAA,SAAAA,IAAmBG,GAAU,SAAUoC,GAChD,OAAmBvC,EAAAA,eAAqBuC,GAUpBvC,EAAAA,aAAmBuC,EAAO,CAC5ClC,WAAWyB,EAAAA,EAAAA,GAAKD,EAAiBU,EAAMtC,MAAMI,WAC7CE,MAAOgC,EAAMtC,MAAMM,OAASA,EAC5BK,SAAU2B,EAAMtC,MAAMW,UAAYA,EAClCE,iBAAkByB,EAAMtC,MAAMa,kBAAoBA,EAClDE,mBAAoBA,EACpBE,cAAeA,EACfE,UAAWA,EACXI,KAAMe,EAAMtC,MAAMuB,MAAQA,EAC1BE,QAASa,EAAMtC,MAAMyB,SAAWA,IAlBzB,IAoBX,IACF,IA6EA,GAAec,EAAAA,EAAAA,IA3SK,SAAgBC,GAClC,MAAO,CAELL,KAAM,CACJM,QAAS,cACTC,aAAcF,EAAMG,MAAMD,cAI5BN,UAAW,CACTQ,UAAWJ,EAAMK,QAAQ,IAI3BhC,iBAAkB,CAChB+B,UAAW,QAIbjC,SAAU,CAAC,EAGXQ,UAAW,CACT2B,MAAO,QAITT,SAAU,CACRU,cAAe,UAIjBjB,QAAS,CACPkB,SAAU,IAIZC,kBAAmB,CACjB,sBAAuB,CACrBC,oBAAqB,EACrBC,uBAAwB,GAE1B,qBAAsB,CACpBC,qBAAsB,EACtBC,wBAAyB,IAK7BC,gBAAiB,CACf,sBAAuB,CACrBF,qBAAsB,EACtBF,oBAAqB,GAEvB,qBAAsB,CACpBG,wBAAyB,EACzBF,uBAAwB,IAK5BI,YAAa,CAAC,EAGdC,sBAAuB,CACrB,qBAAsB,CACpBC,YAAa,aAAa1B,OAA8B,UAAvBS,EAAMkB,QAAQC,KAAmB,sBAAwB,+BAK9FC,oBAAqB,CACnB,qBAAsB,CACpBC,aAAc,aAAa9B,OAA8B,UAAvBS,EAAMkB,QAAQC,KAAmB,sBAAwB,+BAK/FG,mBAAoB,CAClB,qBAAsB,CACpBC,aAAaC,EAAAA,EAAAA,IAAMxB,EAAMkB,QAAQO,QAAQC,KAAM,MAKnDC,qBAAsB,CACpB,qBAAsB,CACpBJ,aAAaC,EAAAA,EAAAA,IAAMxB,EAAMkB,QAAQU,UAAUF,KAAM,MAKrDG,gBAAiB,CAAC,EAGlBC,0BAA2B,CACzB,sBAAuB,CACrBC,YAAa,GAEf,qBAAsB,CACpBC,iBAAkB,gBAKtBC,wBAAyB,CACvB,sBAAuB,CACrBC,WAAY,GAEd,qBAAsB,CACpBC,kBAAmB,gBAKvBC,uBAAwB,CACtB,UAAW,CACTb,YAAavB,EAAMkB,QAAQO,QAAQC,OAKvCW,yBAA0B,CACxB,UAAW,CACTd,YAAavB,EAAMkB,QAAQU,UAAUF,OAKzCY,iBAAkB,CAChBlC,UAAW,QAIbmC,2BAA4B,CAC1B,qBAAsB,CACpBtB,YAAa,aAAa1B,OAAOS,EAAMkB,QAAQsB,KAAK,MACpD,aAAc,CACZvB,YAAa,aAAa1B,OAAOS,EAAMkB,QAAQuB,OAAOtE,aAM5DuE,yBAA0B,CACxB,qBAAsB,CACpBrB,aAAc,aAAa9B,OAAOS,EAAMkB,QAAQsB,KAAK,MACrD,aAAc,CACZnB,aAAc,aAAa9B,OAAOS,EAAMkB,QAAQuB,OAAOtE,aAM7DwE,wBAAyB,CACvB,qBAAsB,CACpBpB,YAAavB,EAAMkB,QAAQO,QAAQmB,OAKvCC,0BAA2B,CACzB,qBAAsB,CACpBtB,YAAavB,EAAMkB,QAAQU,UAAUgB,OAI7C,GAoIkC,CAChCE,KAAM,kBADR,CAEGxF,G,+CCjSCyF,EAAyBxF,EAAAA,YAAiB,SAAmBC,EAAOC,GACtE,IAAIE,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBoF,EAAaxF,EAAMyF,IACnBA,OAAqB,IAAfD,GAAgCA,EACtC9D,GAAQC,EAAAA,EAAAA,GAAyB3B,EAAO,CAAC,UAAW,YAAa,QAErE,OAAoBD,EAAAA,cAAoB,OAAOkC,EAAAA,EAAAA,GAAS,CACtD7B,WAAWyB,EAAAA,EAAAA,GAAK1B,EAAQgC,KAAM/B,EAAWqF,GAAOtF,EAAQsF,KACxDxF,IAAKA,GACJyB,GACL,IA4BA,GAAea,EAAAA,EAAAA,GA1DK,CAElBJ,KAAM,CACJM,QAAS,OACTM,cAAe,SACf2C,SAAU,QAIZD,IAAK,CACH1C,cAAe,QAgDe,CAChCuC,KAAM,gBADR,CAEGC,G,qHC5CGI,EAMD,SAAH,GAAoD,IAA9CC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAK,EAALA,MAAOpC,EAAI,EAAJA,KAClCqC,EACJ,SAACrC,GAAsB,OAAK,SAACsC,GACvBA,EAAMC,OAAOC,QACfN,GACEO,EAAAA,EAAAA,IAAQR,GAAM,SAACS,GACbA,EAAM1C,GAAMsC,EAAMC,OAAOZ,MAAQQ,EAAWnC,GAAMsC,EAAMC,OAAOZ,KACjE,KAGFO,GACEO,EAAAA,EAAAA,IAAQR,GAAM,SAACS,UACNA,EAAM1C,GAAMsC,EAAMC,OAAOZ,KAClC,IAGN,CAAE,EAEJ,OACE,8BAC4C,IAAzCgB,OAAOC,KAAKT,EAAWnC,IAAO6C,SAC7B,iCACE,SAACC,EAAA,EAAS,UAAEV,KACZ,SAAC,EAAS,UACPO,OAAOC,KAAKT,EAAWnC,IAAO+C,KAAI,SAACpB,GAAI,OACtC,SAACqB,EAAA,EAAgB,CACfC,SACE,SAACC,EAAA,EAAQ,CACPV,aAA8BW,IAArBlB,EAAKjC,GAAM2B,GACpByB,SAAUf,EAAarC,GACvB2B,KAAMA,IAGVS,MAAOT,GACFA,EACL,UAOhB,EA8DA,EA5D+E,SAAH,GAGrE,IAFL0B,EAAI,EAAJA,KACAC,EAAW,EAAXA,YAEA,EAAwBlH,EAAAA,UAAemH,EAAAA,EAAAA,OAAqB,eAArDtB,EAAI,KAAEC,EAAO,KACdC,GAAaqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMxB,KAAKE,UAAU,IACpEuB,GAAWC,EAAAA,EAAAA,MAKXC,EAAkBjB,OAAOkB,OAAO5B,GAAM6B,OAAM,SAACC,GAAC,OAA+B,IAA1BpB,OAAOC,KAAKmB,GAAGlB,MAAY,IAC9EmB,EAAoBrB,OAAOkB,OAAO1B,GAAY8B,MAClD,SAACF,GAAC,OAA+B,IAA1BpB,OAAOC,KAAKmB,GAAGlB,MAAY,IAc9BqB,EAAa,CAAEjC,KAAMA,EAAMC,QAASA,EAASC,WAAYA,GAE/D,OACE,UAACgC,EAAA,EAAM,CAACC,QAASd,EAAaD,KAAMA,EAAK,WACvC,SAACgB,EAAA,EAAW,kCACZ,SAACC,EAAA,EAAa,WACZ,UAACC,EAAA,EAAW,WACTP,IACC,SAACQ,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,UAAC,EAAW,CAAC7G,KAAK,QAAQjB,MAAM,UAAUmB,QAAQ,OAAM,WACtD,SAAC5B,EAAA,EAAM,CAACwI,QA7BJ,WAAH,OAASxC,EAAQC,EAAY,EA6BH,yBAC3B,SAACjG,EAAA,EAAM,CAACwI,QA7BH,WAAH,OAASxC,GAAQqB,EAAAA,EAAAA,MAAsB,EA6Bb,+BAIlC,SAACvB,GAAS,QAACI,MAAM,QAAQpC,KAAK,YAAekE,KAC7C,SAAClC,GAAS,QAACI,MAAM,QAAQpC,KAAK,aAAgBkE,KAC9C,SAAClC,GAAS,QAACI,MAAM,cAAcpC,KAAK,kBAAqBkE,KACzD,SAAClC,GAAS,QAACI,MAAM,iBAAiBpC,KAAK,iBAAoBkE,UAG/D,UAACS,EAAA,EAAa,YACZ,SAACzI,EAAA,EAAM,CAACwI,QAASpB,EAAa3G,MAAM,UAAS,qBAG7C,SAACT,EAAA,EAAM,CAACwI,QApCW,WACvB,IACE,IAAME,EAAeC,KAAKC,UAAU7C,IACpC8C,EAAAA,EAAAA,GAAgBH,GAChBlB,GAASsB,EAAAA,EAAAA,IAAa,mCAAoC,YAC1D1B,GAGF,CAFE,MAAO2B,GACPvB,GAASsB,EAAAA,EAAAA,IAAa,oCAAqC,SAC7D,CACF,EA2ByChI,SAAU4G,EAAiBjH,MAAM,UAAS,yBAMrF,E,UCrHMuI,EAAyE,SAAH,GAGrE,IAFL7B,EAAI,EAAJA,KACAC,EAAW,EAAXA,YAEMI,GAAWC,EAAAA,EAAAA,MACjB,EAA0BvH,EAAAA,SAAe,IAAG,eAArC+I,EAAK,KAAEC,EAAQ,KAsBhBC,EAAe,YApBA,WACnB,GAAKF,EAIL,IACE,IAAMlD,EAAO4C,KAAKS,MAAMH,GACxBzB,GAAS6B,EAAAA,EAAAA,IAAiBtD,IAC1ByB,GAASsB,EAAAA,EAAAA,IAAa,wBAAyB,WAGjD,CAFE,MAAOC,GACPvB,GAASsB,EAAAA,EAAAA,IAAa,oCAAqC,SAC7D,MATEtB,GAASsB,EAAAA,EAAAA,IAAa,+BAAgC,SAU1D,CASEQ,GACAlC,GACF,EAEA,OACE,UAACa,EAAA,EAAM,CAACC,QAASd,EAAaD,KAAMA,EAAK,WACvC,SAACgB,EAAA,EAAW,uCACZ,SAACC,EAAA,EAAa,WACZ,SAACmB,EAAA,EAAS,CACRC,WAAS,EACTC,OAAO,SACPvD,MAAM,gBACNpC,KAAK,OACLxC,WAAS,EACT4F,SAAU,SAACwC,GAAC,OAAKR,EAASQ,EAAErD,OAAO4C,MAAM,EACzCU,WAAY,SAACD,GAtBI,IAACE,EACZ,WADYA,EAsBkBF,EAAEE,KApB1CT,IACiB,QAARS,GAAexC,GAmBsB,OAG9C,UAACqB,EAAA,EAAa,YACZ,SAACzI,EAAA,EAAM,CAACwI,QAASpB,EAAa3G,MAAM,UAAS,qBAG7C,SAACT,EAAA,EAAM,CAACwI,QAASW,EAAcrI,UAAWmI,EAAOxI,MAAM,UAAS,yBAMxE,EAEA,EAAeP,EAAAA,KAAW8I,G,mGCpDtBa,EAAuC3J,EAAAA,YAAiB,SAAiCC,EAAOC,GAClG,IAAIE,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBsB,GAAQC,EAAAA,EAAAA,GAAyB3B,EAAO,CAAC,UAAW,cAExD,OAAoBD,EAAAA,cAAoB,OAAOkC,EAAAA,EAAAA,GAAS,CACtD7B,WAAWyB,EAAAA,EAAAA,GAAK1B,EAAQgC,KAAM/B,GAC9BH,IAAKA,GACJyB,GACL,IAuBAgI,EAAwBC,QAAU,0BAClC,OAAepH,EAAAA,EAAAA,GA9CK,CAElBJ,KAAM,CACJyH,SAAU,WACVC,MAAO,GACPC,IAAK,MACLC,UAAW,qBAwCmB,CAChCzE,KAAM,8BADR,CAEGoE,G,+BCzBUM,GAAoD,SAAH,GAWvD,IAVLpE,EAAI,EAAJA,KAAK,EAAD,EACJqE,cAAAA,OAAa,MAAG,OAAM,MACtBC,cAAAA,OAAa,MAAGC,GAAAA,EAAQ,EACxBC,EAAoB,EAApBA,qBAAqB,EAAD,EACpBC,cAAAA,OAAa,MAAG,SAAQ,MACxBC,cAAAA,OAAa,MAAGC,EAAAA,EAAiB,EACjCC,EAAoB,EAApBA,qBAAqB,EAAD,EACpBC,kBAAAA,OAAiB,MAAG,UAAS,MAC7BC,kBAAAA,OAAiB,MAAGC,EAAAA,EAAa,EACjCC,EAAwB,EAAxBA,yBAEA,OACE,UAACC,EAAA,EAAI,WACFvE,OAAOC,KAAKX,GAAMc,KAAI,SAACpB,GAAI,OAC1B,UAACwF,EAAA,EAAQ,CAACC,GAAIzF,EAAK,WACjB,SAAC0F,EAAA,EAAY,WACX,SAACC,EAAA,EAAU,CACT,aAAYhB,EACZ5B,QAAS,kBAAM+B,EAAqB9E,EAAK,EAAC,UAE1C,SAAC4E,EAAa,CAAC5J,MAAM,iBAGzB,SAAC4K,EAAA,EAAY,UAAE5F,KACf,SAAC,EAAuB,WACtB,SAAC2F,EAAA,EAAU,CACT1J,KAAK,QACL,aAAY8I,EACZhC,QAAS,kBAAMmC,EAAqBlF,EAAK,EAAC,UAE1C,SAACgF,EAAa,CAAChK,MAAM,iBAhBFgF,EAmBd,KAEb,SAACwF,EAAA,EAAQ,CAACC,GAAG,SAAQ,UACnB,SAAClL,EAAA,EAAM,CACL,aAAY4K,EACZU,WAAW,SAACT,EAAiB,CAACpK,MAAM,cACpC+H,QAASuC,EAAyB,SAEjCH,KANqB,YAWhC,ECFA,OApDA,SAAoDzK,GAClD,IAAQ4F,EAAsD5F,EAAtD4F,KAAMwF,EAAgDpL,EAAhDoL,WAAYC,EAAoCrL,EAApCqL,WAAYC,EAAwBtL,EAAxBsL,WAAYC,EAAYvL,EAAZuL,QAClD,GAAwCC,EAAAA,EAAAA,IAAQ,GAAM,eAA/CxE,EAAI,KAAEyE,EAAU,KAAExE,EAAW,KACpC,GAA0ByE,EAAAA,EAAAA,UAASL,GAAW,eAAvCjE,EAAK,KAAEuE,EAAQ,KACtB,GAAwCD,EAAAA,EAAAA,UAAS,IAAG,eAA7CE,EAAY,KAAEC,EAAe,KAE9BC,EAAe,WAAH,MACD,KAAf1E,EAAM9B,MACNgB,OAAOC,KAAKX,GAAM6B,OAAM,SAACnC,GAAI,OAAKA,IAASsG,GAAgBtG,IAAS8B,EAAM9B,IAAI,GAAE,EAwBlF,OACE,iCACE,SAAC0E,GAAmB,CAClBpE,KAAMA,EACNwE,qBAhBa,SAAC9E,GAClBqG,EAAS/F,EAAKN,IACduG,EAAgBvG,GAChBmG,GACF,EAaMjB,qBAAsBc,EACtBV,yBAZY,WAChBe,EAASN,GACTQ,EAAgB,IAChBJ,GACF,KAUI,SAACL,EAAU,CACTpE,KAAMA,EACNC,YAAaA,EACb+B,aAjCe,WACf5B,EAAM9B,OAASsG,GACjBN,EAAWM,GAETE,MACFP,EAAQnE,GACRH,IAEJ,EA0BM8E,aAAc3E,EACd4E,YAAaL,EACbG,aAAcA,MAItB,EChBA,OAnCA,SAAqD9L,GACnD,IACEsF,EASEtF,EATFsF,KACAyF,EAQE/K,EARF+K,GACAkB,EAOEjM,EAPFiM,SACAjG,EAMEhG,EANFgG,aACAJ,EAKE5F,EALF4F,KACAwF,EAIEpL,EAJFoL,WACAC,EAGErL,EAHFqL,WACAC,EAEEtL,EAFFsL,WACAC,EACEvL,EADFuL,QAGF,OACE,UAACW,EAAA,EAAS,CAACD,SAAUA,IAAa3G,EAAMyB,SAAUf,EAAaV,GAAM,WACnE,SAAC6G,EAAA,EAAgB,CACfC,YAAY,SAACC,EAAA,EAAc,IAC3B,gBAAetB,EAAK,WACpBA,GAAIA,EAAK,UAAU,UAEnB,UAACuB,EAAA,EAAU,qBAAShH,QAEtB,SAACiH,EAAA,EAAgB,WACf,SAAC,GAAa,CACZ3G,KAAMA,EACNwF,WAAYA,EACZC,WAAYA,EACZC,WAAYA,EACZC,QAASA,QAKnB,ECDA,OAzCA,SAAmBvL,GACjB,IAAQgH,EACNhH,EADMgH,KAAMC,EACZjH,EADYiH,YAAa8E,EACzB/L,EADyB+L,aAAcC,EACvChM,EADuCgM,YAAahD,EACpDhJ,EADoDgJ,aAAc8C,EAClE9L,EADkE8L,aAE9DU,EAAOT,EAEb,OACE,UAACjE,EAAA,EAAM,CAACC,QAASd,EAAaD,KAAMA,EAAK,WACvC,SAACgB,EAAA,EAAW,oBACZ,UAACC,EAAA,EAAa,YACZ,SAACmB,EAAA,EAAS,CACRrD,MAAM,OACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACT2H,MAAO0D,EAAKlH,KACZyB,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKQ,GAAI,IAAElH,KAAMiE,EAAErD,OAAO4C,QAAQ,EAC/D2D,OAAQX,IACRY,WAAW,uCAEb,SAACtD,EAAA,EAAS,CACRrD,MAAM,cACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACTwL,WAAS,EACT7D,MAAO0D,EAAKI,YACZ7F,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKQ,GAAI,IAAEI,YAAarD,EAAErD,OAAO4C,QAAQ,QAG1E,UAACR,EAAA,EAAa,YACZ,SAACzI,EAAA,EAAM,CAACwI,QAASpB,EAAa3G,MAAM,UAAS,qBAG7C,SAACT,EAAA,EAAM,CAACwI,QAASW,EAAc1I,MAAM,UAAUK,UAAWmL,IAAe,uBAMjF,EC1CA,SAASe,GAAW7M,GAClB,IAAQiM,EAA2BjM,EAA3BiM,SAAUjG,EAAiBhG,EAAjBgG,aACZqB,GAAwBC,EAAAA,EAAAA,MACxBxB,GAAaqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMxB,KAAKE,UAAU,IACpEgH,GAAQ3F,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAM2F,OAAOD,KAAK,IAYlE,OACE,SAAC,GAAc,CACbxH,KAAK,QACLyF,GAAG,QACHkB,SAAUA,EACVjG,aAAcA,EACdJ,KAAME,EAAWkH,UACjB5B,WAAY6B,GACZ5B,WAAY,CACV/F,KAAM,OACNsH,YAAa,eAEftB,WAtBe,SAAChG,GAEhBgB,OAAOkB,OAAOsF,GAAOlF,MAAK,SAACsF,GAAI,OAAKA,EAAKC,MAAMC,SAAS9H,EAAK,KAC7DgB,OAAOkB,OAAO1B,EAAWuH,UAAUzF,MAAK,SAACsF,GAAI,OAAKA,EAAKC,MAAMC,SAAS9H,EAAK,IAE3E+B,GAASsB,EAAAA,EAAAA,IAAa,4CAA6C,UAC9DtB,GAASiG,EAAAA,EAAAA,IAAWhI,GAC7B,EAgBIiG,QAfY,SAACiB,GAAU,OAAKnF,GAASkG,EAAAA,EAAAA,IAAQf,GAAO,GAkB1D,CAEA,OAAezM,EAAAA,KAAW8M,I,sBC6C1B,OA1EA,SAAoB7M,GAClB,IAAQgH,EACNhH,EADMgH,KAAMC,EACZjH,EADYiH,YAAa8E,EACzB/L,EADyB+L,aAAcC,EACvChM,EADuCgM,YAAahD,EACpDhJ,EADoDgJ,aAAc8C,EAClE9L,EADkE8L,aAE9D0B,EAAQzB,EAEd,OACE,UAACjE,EAAA,EAAM,CAACC,QAASd,EAAaD,KAAMA,EAAK,WACvC,SAACgB,EAAA,EAAW,qBACZ,UAACC,EAAA,EAAa,YACZ,SAACmB,EAAA,EAAS,CACRrD,MAAM,OACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACT2H,MAAO0E,EAAMlI,KACbyB,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKwB,GAAK,IAAElI,KAAMiE,EAAErD,OAAO4C,QAAQ,EAChE2D,OAAQX,IACRY,WAAW,uCAEb,SAACtD,EAAA,EAAS,CACRrD,MAAM,aACNpC,KAAK,SACL2F,OAAO,SACPmE,QAAM,EACNC,YAAa,CACX5E,MAAO0E,EAAMG,WACb5G,SAAU,SAACwC,GAAC,OACVyC,GAAY,kBAAKwB,GAAK,IAAEG,WAAYpE,EAAErD,OAAO4C,QAAkB,GACjE,UAED8E,EAAAA,GAAAA,GAAM,EAAG,IAAIlH,KAAI,SAACoC,GAAK,OACtB,SAAC+E,GAAA,EAAQ,CAAa/E,MAAOA,EAAM,SAChCA,GADYA,EAEJ,OAGf,SAACM,EAAA,EAAS,CACRrD,MAAM,SACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACT2H,MAAO0E,EAAMtH,OACba,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKwB,GAAK,IAAEtH,OAAQqD,EAAErD,OAAO4C,QAAQ,KAEpE,SAACM,EAAA,EAAS,CACRrD,MAAM,WACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACT2H,MAAO0E,EAAMM,SACb/G,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKwB,GAAK,IAAEM,SAAUvE,EAAErD,OAAO4C,QAAQ,KAEtE,SAACM,EAAA,EAAS,CACRrD,MAAM,SACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACTwL,WAAS,EACT7D,MAAO0E,EAAMO,OACbhH,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKwB,GAAK,IAAEO,OAAQxE,EAAErD,OAAO4C,QAAQ,QAGtE,UAACR,EAAA,EAAa,YACZ,SAACzI,EAAA,EAAM,CAACwI,QAASpB,EAAa3G,MAAM,UAAS,qBAG7C,SAACT,EAAA,EAAM,CAACwI,QAASW,EAAc1I,MAAM,UAAUK,UAAWmL,IAAe,uBAMjF,EC9EA,SAASkC,GAAYhO,GACnB,IAAQiM,EAA2BjM,EAA3BiM,SAAUjG,EAAiBhG,EAAjBgG,aACZqB,GAAwBC,EAAAA,EAAAA,MACxBxB,GAAaqB,EAAAA,EAAAA,KACjB,SAACC,GAAgB,OAAKA,EAAMxB,KAAKE,WAAWmI,aAAa,IAM3D,OACE,SAAC,GAAc,CACb3I,KAAK,SACLyF,GAAG,SACHkB,SAAUA,EACVjG,aAAcA,EACdJ,KAAME,EACNsF,WAAY8C,GACZ7C,WAAY,CACV/F,KAAM,OACNqI,WAAY,EACZzH,OAAQ,SACR4H,SAAU,WACVC,OAAQ,UAEVzC,WAlBe,SAAChG,GAAY,OAAK+B,GAAS8G,EAAAA,EAAAA,IAAY7I,GAAO,EAmB7DiG,QAlBY,SAACiC,GAAmB,OAAKnG,GAAS+G,EAAAA,EAAAA,IAASZ,GAAQ,GAqBrE,CAEA,OAAezN,EAAAA,KAAWiO,I,oIC8M1B,GAlNK,SAAH,GASK,IARLhH,EAAI,EAAJA,KACAC,EAAW,EAAXA,YACA3B,EAAI,EAAJA,KACA+I,EAAM,EAANA,OACAnB,EAAI,EAAJA,KACAlB,EAAW,EAAXA,YACAsC,EAAU,EAAVA,WACAC,EAAY,EAAZA,aAEMC,GAAerH,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMxB,KAAKoH,SAAS,IAC3E,EAA0CjN,EAAAA,SAAmC,MAAK,eAA3E0O,EAAa,KAAEC,EAAgB,KAMhCC,EAAqB,WACzBD,EAAiB,KACnB,EAEME,EAAiB,SAACtJ,GAAqB,OAAK,WAChDiJ,GAAa,kBACRF,GAAM,IACTQ,UAAS,kBACJR,EAAOQ,UAAQ,eACjBvJ,EAAO,OAGZqJ,GACF,CAAE,EAUF,OACE,UAAC7G,EAAA,EAAM,CAACC,QAASd,EAAaD,KAAMA,EAAK,WACvC,SAACgB,EAAA,EAAW,sBACZ,UAACC,EAAA,EAAa,YAEZ,SAACmB,EAAA,EAAS,CACRrD,MAAM,OACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACT2H,MAAOxD,EACPyB,SAAU,SAACwC,GAAC,OAAK+E,EAAW/E,EAAErD,OAAO4C,MAAM,EAC3C2D,MAAgB,KAATnH,EACPoH,WAAW,gCAGb,SAACtD,EAAA,EAAS,CACRrD,MAAM,SACNuD,OAAO,SACP3F,KAAK,SACL8J,QAAM,EACNC,YAAa,CACX5E,MAAOuF,EAAOS,OACd/H,SAAU,SAACwC,GAAC,OACVgF,GAAa,kBACRF,GAAM,IACTS,OAAQvF,EAAErD,OAAO4C,QACjB,GACJ,UAED8E,EAAAA,GAAAA,IAAO,EAAG,GAAGlH,KAAI,SAACoC,GAAK,OACtB,SAAC+E,GAAA,EAAQ,CAAa/E,MAAOA,EAAM,SAChCA,GADYA,EAEJ,OAIf,SAACM,EAAA,EAAS,CACRrD,MAAM,UACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACTwL,WAAS,EACT7D,MAAOuF,EAAOzB,aAAe,GAC7B7F,SAAU,SAACwC,GAAC,OACVgF,GAAa,kBACRF,GAAM,IACTzB,YAAarD,EAAErD,OAAO4C,QACtB,KAIN,SAACiG,GAAA,EAAU,CAAChE,GAAG,qBAAqBiE,MAAO,CAAEtK,UAAW,IAAK,2BAG7D,SAACuK,GAAA,EAAM,CACLC,UAAQ,EACRnE,GAAG,eACHoE,QAAQ,qBACRrG,MAAOuF,EAAOe,QAAU,GACxBrI,SAAU,SAACwC,GAAC,OACVgF,GAAa,kBAAKF,GAAM,IAAEe,OAAQ7F,EAAErD,OAAO4C,QAAoB,EAChE,SAEAoE,EAAKC,MAAMzG,KAAI,SAAC8F,GAAI,OACnB,SAACqB,GAAA,EAAQ,CAAY/E,MAAO0D,EAAK,SAC9BA,GADYA,EAEJ,OAIf,SAACuC,GAAA,EAAU,CAAChE,GAAG,kBAAkBiE,MAAO,CAAEtK,UAAW,IAAK,wBAG1D,SAACuK,GAAA,EAAM,CACLC,UAAQ,EACRnE,GAAG,YACHoE,QAAQ,kBACRrG,MAAOuF,EAAOgB,KAAO,GACrBtI,SAAU,SAACwC,GAAC,OAAKgF,GAAa,kBAAKF,GAAM,IAAEgB,IAAK9F,EAAErD,OAAO4C,QAAoB,EAAC,SAE7ExC,OAAOC,KAAKiI,GAAc9H,KAAI,SAAC8F,GAAI,OAClC,SAACqB,GAAA,EAAQ,CAAY/E,MAAO0D,EAAK,SAC9BA,GADYA,EAEJ,OAIf,SAACuC,GAAA,EAAU,CAAChE,GAAG,gBAAgBiE,MAAO,CAAEtK,UAAW,IAAK,wBAGxD,UAACmG,EAAA,EAAI,WACFwD,EAAOQ,UACNvI,OAAOC,KAAK8H,EAAOQ,UAAUnI,KAAI,SAACpB,GAAI,OACpC,UAACwF,EAAA,EAAQ,CAACC,GAAIzF,EAAK,WACjB,SAAC4F,EAAA,EAAY,UAAEoE,GAAAA,EAAShK,GAAMA,QAC9B,SAAC2J,GAAA,EAAM,CACLnG,MAAOuF,EAAOQ,SAAWR,EAAOQ,SAASvJ,GAA2B,EACpE3B,KAAK,SACLoD,SAAU,SAACwC,GAAC,OACVgF,GAAa,kBACRF,GAAM,IACTQ,UAAS,kBACJR,EAAOQ,UAAQ,eACjBvJ,EAAOiE,EAAErD,OAAO4C,UAEnB,EACH,SAEAwG,GAAAA,EAAShK,GAAMsI,MAAMlH,KAAI,SAACoC,GAAK,OAC9B,SAAC+E,GAAA,EAAQ,CAAa/E,MAAOA,EAAM,SAChCA,GADYA,EAEJ,OAGf,SAAC,EAAuB,WACtB,SAACmC,EAAA,EAAU,CACT1J,KAAK,QACL,aAAW,SACX8G,QAAS,kBACPkG,GACEnI,EAAAA,EAAAA,IAAQiI,GAAQ,SAAChI,GACXA,EAAMwI,iBACDxI,EAAMwI,SAASvJ,EAC1B,IACD,EACF,UAED,SAACiK,EAAA,EAAiB,CAACjP,MAAM,iBAlCNgF,EAqCd,KAEf,UAACwF,EAAA,EAAQ,CAACC,GAAG,UAAS,WACpB,SAAClL,EAAA,EAAM,CAACwI,QAjKS,SAACpC,GAC1ByI,EAAiBzI,EAAMuJ,cACzB,EA+J+CrE,WAAW,SAACsE,EAAA,EAAa,IAAI,uBAGlE,SAACC,GAAA,EAAI,CACH3E,GAAG,gBACH4E,SAAUlB,EACVmB,aAAW,EACX5I,KAAM6I,QAAQpB,GACd1G,QAAS4G,EAAmB,SAE3BrI,OAAOC,KAAK+I,GAAAA,GACVQ,QAAO,SAACC,GAAC,OAAMzJ,OAAOC,KAAK8H,EAAOQ,UAAY,CAAC,GAAGzB,SAAS2C,EAAE,IAC7DrJ,KAAI,SAACpB,GAAI,OACR,SAACuI,GAAA,EAAQ,CACPxF,QAASuG,EAAetJ,GAAyB,SAGhDgK,GAAAA,EAAShK,GAAMA,MAFXA,EAGI,QAnBQ,kBAyB/B,UAACgD,EAAA,EAAa,YACZ,SAACzI,EAAA,EAAM,CAACwI,QAASpB,EAAa3G,MAAM,UAAS,qBAG7C,SAACT,EAAA,EAAM,CAACwI,QA1KO,WACnB2D,GAAY,kBACPkB,GAAI,IACP8C,SAAQ,kBAAM9C,EAAK8C,SAAO,eAAG1K,EAAO+I,OAEtCpH,GACF,EAoKqC3G,MAAM,UAAUK,SAAmB,KAAT2E,EAAY,uBAM7E,ECrNM2K,GAAc,CAClB3K,KAAM,GACNwJ,OAAQ,EACRlC,YAAa,IAGTsD,GAKD,SAAH,GAA8C,IAAxCC,EAAI,EAAJA,KAAMjD,EAAI,EAAJA,KAAMlB,EAAW,EAAXA,YAAaoE,EAAO,EAAPA,QACzBxK,EAAO0J,GAAAA,EAASa,GAEtB,OACE,iCACE,SAACE,GAAA,EAAS,UAAED,EAAUxK,EAAK0K,UAAY1K,EAAKN,QAC5C,SAAC+K,GAAA,EAAS,WACR,SAACpB,GAAA,EAAM,CACLnG,MAAOoE,EAAKqD,MAAMJ,GAClBxM,KAAK,SACLoD,SAAU,SAACwC,GAAC,OACVyC,GAAY,kBACPkB,GAAI,IACPqD,OAAM,kBAAMrD,EAAKqD,OAAK,eAAGJ,EAAO5G,EAAErD,OAAO4C,UACzC,EACH,SAEAlD,EAAKgI,MAAMlH,KAAI,SAACoC,GAAK,OACpB,SAAC+E,GAAA,EAAQ,CAAa/E,MAAOA,EAAM,SAChCA,GADYA,EAEJ,UAMvB,EA6KA,OA3KA,SAAmB9I,GACjB,IAAQgH,EACNhH,EADMgH,KAAMC,EACZjH,EADYiH,YAAa8E,EACzB/L,EADyB+L,aAAcC,EACvChM,EADuCgM,YAAahD,EACpDhJ,EADoDgJ,aAAc8C,EAClE9L,EADkE8L,aAE9DtJ,GAAQgO,EAAAA,GAAAA,KACRJ,GAAUK,EAAAA,GAAAA,GAAcjO,EAAMkO,YAAYC,KAAK,OAC/CzD,EAAOnB,EACPoB,GAAQhG,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMxB,KAAKoH,SAAS,IACpE,GAA6DxB,EAAAA,EAAAA,KAAS,eAA/DoF,EAAW,KAAEC,EAAiB,KAAEC,EAAkB,KACzD,GAA0CpF,EAAAA,EAAAA,WAAQ,UAAkBuE,KAAc,eAA3Ec,EAAa,KAAEC,EAAgB,KACtC,GAAkDtF,EAAAA,EAAAA,UAAS,QAAO,eAA3DuF,EAAiB,KAAEC,EAAoB,KACxCC,EAAc,CAAEjE,KAAMA,EAAMlB,YAAaA,EAAaoE,QAASA,GAsBrE,OACE,UAACtI,EAAA,EAAM,CAACC,QAASd,EAAaD,KAAMA,EAAK,WACvC,SAACgB,EAAA,EAAW,oBACZ,UAACC,EAAA,EAAa,YACZ,UAACC,EAAA,EAAW,YAEV,SAACkB,EAAA,EAAS,CACRrD,MAAM,OACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACT2H,MAAOoE,EAAK5H,KACZyB,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKkB,GAAI,IAAE5H,KAAMiE,EAAErD,OAAO4C,QAAQ,EAC/D2D,OAAQX,IACRY,WAAW,uCAGb,SAACtD,EAAA,EAAS,CACRrD,MAAM,SACNuD,OAAO,SACP3F,KAAK,SACL8J,QAAM,EACNC,YAAa,CACX5E,MAAOoE,EAAK4B,OACZ/H,SAAU,SAACwC,GAAC,OACVyC,GAAY,kBACPkB,GAAI,IACP4B,OAAQvF,EAAErD,OAAO4C,QACjB,GACJ,UAED8E,EAAAA,GAAAA,GAAM,EAAG,IAAIlH,KAAI,SAACoC,GAAK,OACtB,SAAC+E,GAAA,EAAQ,CAAa/E,MAAOA,EAAM,SAChCA,GADYA,EAEJ,OAIf,SAACM,EAAA,EAAS,CACRrD,MAAM,qBACNuD,OAAO,SACP3F,KAAK,SACL8J,QAAM,EACNC,YAAa,CACX5E,MAAOoE,EAAKqD,MAAMa,eAClBrK,SAAU,SAACwC,GAAC,OACVyC,GAAY,kBACPkB,GAAI,IACPqD,OAAM,kBAAMrD,EAAKqD,OAAK,IAAEa,eAAgB7H,EAAErD,OAAO4C,UACjD,GACJ,SAED,CAAC,EAAG,IAAIpC,KAAI,SAACoC,GAAK,OACjB,SAAC+E,GAAA,EAAQ,CAAa/E,MAAOA,EAAM,SAChCA,GADYA,EAEJ,UAKjB,SAACiG,GAAA,EAAU,CAAChE,GAAG,cAAciE,MAAO,CAAEtK,UAAW,IAAK,oBAGtD,SAAC2M,GAAA,EAAc,CAACrC,MAAO,CAAEsC,aAAc,IAAK,UAC1C,SAACC,GAAA,EAAK,CAAChQ,KAAK,QAAO,UACjB,UAACiQ,GAAA,EAAS,YACR,UAACC,GAAA,EAAQ,YACP,SAACvB,IAAU,QAACC,KAAK,UAAagB,KAC9B,SAACjB,IAAU,QAACC,KAAK,eAAkBgB,QAErC,UAACM,GAAA,EAAQ,YACP,SAACvB,IAAU,QAACC,KAAK,QAAWgB,KAC5B,SAACjB,IAAU,QAACC,KAAK,gBAAmBgB,QAEtC,UAACM,GAAA,EAAQ,YACP,SAACvB,IAAU,QAACC,KAAK,SAAYgB,KAC7B,SAACjB,IAAU,QAACC,KAAK,cAAiBgB,QAEpC,UAACM,GAAA,EAAQ,YACP,SAACvB,IAAU,QAACC,KAAK,WAAcgB,KAC/B,SAACjB,IAAU,QAACC,KAAK,cAAiBgB,QAEpC,UAACM,GAAA,EAAQ,YACP,SAACvB,IAAU,QAACC,KAAK,SAAYgB,KAC7B,SAACjB,IAAU,QAACC,KAAK,YAAegB,eAMxC,SAACpC,GAAA,EAAU,CAAChE,GAAG,cAAciE,MAAO,CAAEtK,UAAW,IAAK,oBAGtD,SAACuK,GAAA,EAAM,CACLC,UAAQ,EACRnE,GAAG,QACHoE,QAAQ,cACRrG,MAAOoE,EAAKC,MACZpG,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKkB,GAAI,IAAEC,MAAO5D,EAAErD,OAAO4C,QAAoB,EAAC,SAE5ExC,OAAOC,KAAK4G,GAAOzG,KAAI,SAAC8F,GAAI,OAC3B,SAACqB,GAAA,EAAQ,CAAY/E,MAAO0D,EAAK,SAC9BA,GADYA,EAEJ,OAIf,SAACuC,GAAA,EAAU,CAAChE,GAAG,gBAAgBiE,MAAO,CAAEtK,UAAW,IAAK,sBAGxD,SAACsF,GAAmB,CAClBpE,KAAMsH,EAAK8C,QACX5F,qBApIiB,SAAC9E,GACxB0L,EAAiB9D,EAAK8C,QAAQ1K,IAC9B4L,EAAqB5L,GACrBuL,GACF,EAiIQrG,qBA/HmB,SAAClF,GAC1B0G,GACE5F,EAAAA,EAAAA,IAAQ8G,GAAM,SAAC7G,UACNA,EAAM2J,QAAQ1K,EACvB,IAEJ,EA0HQsF,yBAxHgB,WACtBoG,EAAiBf,IACjBiB,EAAqB,QACrBL,GACF,KAsHM,SAAC,GAAW,CACV7J,KAAM4J,EACN3J,YAAa6J,EACbxL,KAAM2L,EACN5C,OAAQ0C,EACR7D,KAAMA,EACNqB,aAAcyC,EACd1C,WAAY4C,EACZlF,YAAaA,QAGjB,UAAC1D,EAAA,EAAa,YACZ,SAACzI,EAAA,EAAM,CAACwI,QAASpB,EAAa3G,MAAM,UAAS,qBAG7C,SAACT,EAAA,EAAM,CAACwI,QAASW,EAAc1I,MAAM,UAAUK,UAAWmL,IAAe,uBAMjF,ECrOA,SAAS4F,GAAW1R,GAClB,IAAQiM,EAA2BjM,EAA3BiM,SAAUjG,EAAiBhG,EAAjBgG,aACZqB,GAAwBC,EAAAA,EAAAA,MACxBxB,GAAaqB,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAMxB,KAAKE,WAAWuH,QAAQ,IAC7EP,GAAQ3F,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAM2F,OAAOD,KAAK,IASlE,OACE,SAAC,GAAc,CACbxH,KAAK,QACLyF,GAAG,QACHkB,SAAUA,EACVjG,aAAcA,EACdJ,KAAME,EACNsF,WAAYuG,GACZtG,WAAY,CACV/F,KAAM,OACN3B,KAAM,OACNmL,OAAQ,EACRyB,MAAO,CACLqB,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,MAAO,EACPC,YAAa,EACbC,aAAc,EACdC,WAAY,EACZC,WAAY,EACZC,SAAU,EACVjB,eAAgB,IAElBkB,gBAAiB,GACjBnF,MAAO,GACP6C,QAAS,CAAC,EACVuC,WAAY,IAEdjH,WArCe,SAAChG,GACdgB,OAAOkB,OAAOsF,GAAOlF,MAAK,SAACsF,GAAI,OAAKA,EAAK5H,OAASA,CAAI,IACxD+B,GAASsB,EAAAA,EAAAA,IAAa,4CAA6C,UAC9DtB,GAASmL,EAAAA,EAAAA,IAAWlN,GAC7B,EAkCIiG,QAjCY,SAAC2B,GAAc,OAAK7F,GAASoL,EAAAA,EAAAA,IAAQvF,GAAO,GAoC9D,CAEA,OAAenN,EAAAA,KAAW2R,ICiC1B,OA3EA,SAAwB1R,GACtB,IAAQgH,EACNhH,EADMgH,KAAMC,EACZjH,EADYiH,YAAa8E,EACzB/L,EADyB+L,aAAcC,EACvChM,EADuCgM,YAAahD,EACpDhJ,EADoDgJ,aAAc8C,EAClE9L,EADkE8L,aAE9DU,EAAOT,EACPe,GAAQ3F,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKsL,EAAAA,EAAAA,IAAgBtL,EAAM,IAEtE,OACE,UAACU,EAAA,EAAM,CAACC,QAASd,EAAaD,KAAMA,EAAK,WACvC,SAACgB,EAAA,EAAW,0BACZ,UAACC,EAAA,EAAa,YACZ,SAACmB,EAAA,EAAS,CACRrD,MAAM,OACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACT2H,MAAO0D,EAAKlH,KACZyB,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKQ,GAAI,IAAElH,KAAMiE,EAAErD,OAAO4C,QAAQ,EAC/D2D,OAAQX,IACRY,WAAW,uCAEb,SAACtD,EAAA,EAAS,CACRrD,MAAM,SACNuD,OAAO,SACP3F,KAAK,SACL8J,QAAM,EACNC,YAAa,CACX5E,MAAO0D,EAAKsC,OACZ/H,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKQ,GAAI,IAAEsC,OAAQvF,EAAErD,OAAO4C,QAAkB,GAC3E,UAED8E,EAAAA,GAAAA,IAAO,EAAG,GAAGlH,KAAI,SAACoC,GAAK,OACtB,SAAC+E,GAAA,EAAQ,CAAa/E,MAAOA,EAAM,SAChCA,GADYA,EAEJ,OAGf,SAACM,EAAA,EAAS,CACRrD,MAAM,cACNpC,KAAK,OACL2F,OAAO,SACPnI,WAAS,EACTwL,WAAS,EACT7D,MAAO0D,EAAKI,YACZ7F,SAAU,SAACwC,GAAC,OAAKyC,GAAY,kBAAKQ,GAAI,IAAEI,YAAarD,EAAErD,OAAO4C,QAAQ,KAExE,SAACM,EAAA,EAAS,CACRrD,MAAM,mBACNuD,OAAO,SACPmE,QAAM,EACNC,YAAa,CACXwB,UAAU,EACVpG,MAAO0D,EAAKmG,cACZ5L,SAAU,SAACwC,GAAC,OACVyC,GAAY,kBAAKQ,GAAI,IAAEmG,cAAepJ,EAAErD,OAAO4C,QAAoB,GACrE,SAEDgE,EAAMpG,KAAI,SAACpB,GAAI,OACd,SAACuI,GAAA,EAAQ,CAAY/E,MAAOxD,EAAK,SAC9BA,GADYA,EAEJ,UAIjB,UAACgD,EAAA,EAAa,YACZ,SAACzI,EAAA,EAAM,CAACwI,QAASpB,EAAa3G,MAAM,UAAS,qBAG7C,SAACT,EAAA,EAAM,CAACwI,QAASW,EAAc1I,MAAM,UAAUK,UAAWmL,IAAe,uBAMjF,EChFA,SAAS8G,GAAgB5S,GACvB,IAAQiM,EAA2BjM,EAA3BiM,SAAUjG,EAAiBhG,EAAjBgG,aACZqB,GAAwBC,EAAAA,EAAAA,MACxBxB,GAAaqB,EAAAA,EAAAA,KACjB,SAACC,GAAgB,OAAKA,EAAMxB,KAAKE,WAAW+M,cAAc,IAEtD/F,GAAQ3F,EAAAA,EAAAA,KAAY,SAACC,GAAgB,OAAKA,EAAM2F,OAAOD,KAAK,IASlE,OACE,SAAC,GAAc,CACbxH,KAAK,cACLyF,GAAG,cACHkB,SAAUA,EACVjG,aAAcA,EACdJ,KAAME,EACNsF,WAAY0H,GACZzH,WAAY,CACV/F,KAAM,OACNwJ,OAAQ,EACR6D,cAAe,CAAC,mBAChB/F,YAAa,eAEftB,WArBe,SAAChG,GACdgB,OAAOkB,OAAOsF,GAAOlF,MAAK,SAACsF,GAAI,OAAKA,EAAKqF,WAAWnF,SAAS9H,EAAK,IACpE+B,GAASsB,EAAAA,EAAAA,IAAa,4CAA6C,UAC9DtB,GAAS0L,EAAAA,EAAAA,GAAgBzN,GAClC,EAkBIiG,QAjBY,SAACiB,GAAe,OAAKnF,GAAS2L,EAAAA,EAAAA,IAAaxG,GAAO,GAoBpE,CAEA,OAAezM,EAAAA,KAAW6S,IChCpBK,GAAuB,WAC3B,OAAgCvH,EAAAA,EAAAA,UAAiB,IAAG,eAA7CO,EAAQ,KAAEiH,EAAW,KAC5B,GAA0D1H,EAAAA,EAAAA,KAAS,eAA5D2H,EAAU,KAAEC,EAAgB,KAAEC,EAAiB,KACtD,GAA0D7H,EAAAA,EAAAA,KAAS,eAA5D8H,EAAU,KAAEC,EAAgB,KAAEC,EAAiB,KAEhDxN,GAAeyN,EAAAA,EAAAA,cACnB,SAACC,GAAa,OAAK,SAACzN,EAA8B0N,GAChDT,EAAYS,EAAaD,EAAQ,GACnC,CAAC,GACD,IAGF,OACE,iCACE,SAAC1L,EAAA,EAAW,yBACZ,SAAC,GAAU,CAACiE,SAAUA,EAAUjG,aAAcA,KAC9C,SAAC,GAAe,CAACiG,SAAUA,EAAUjG,aAAcA,KACnD,SAAC,GAAU,CAACiG,SAAUA,EAAUjG,aAAcA,KAC9C,SAAC,GAAW,CAACiG,SAAUA,EAAUjG,aAAcA,KAC/C,SAACmC,EAAA,EAAG,CAACyL,EAAG,EAAGC,GAAG,OAAM,UAClB,UAAC,EAAW,CAACvT,MAAM,UAAUmB,QAAQ,WAAU,WAC7C,SAAC5B,EAAA,EAAM,CACL,aAAW,qBACXsL,WAAW,SAAC2I,EAAA,EAAU,IACtBzL,QAAS,kBAAM+K,GAAkB,EAAC,qBAIpC,SAACvT,EAAA,EAAM,CACL,aAAW,qBACXsL,WAAW,SAAC4I,EAAA,EAAS,IACrB1L,QAAS,kBAAMkL,GAAkB,EAAC,0BAMxC,SAAC,EAAgB,CAACvM,KAAMmM,EAAYlM,YAAaoM,KACjD,SAAC,EAAgB,CAACrM,KAAMsM,EAAYrM,YAAauM,MAGvD,EAEA,GAAezT,EAAAA,KAAWkT,G,2BCrDtBe,EAAyBC,EAAQ,MAEjCC,EAA0BD,EAAQ,MAKtCE,EAAQ,OAAU,EAElB,IAAIpU,EAAQmU,EAAwBD,EAAQ,OAIxCG,GAAW,EAFMJ,EAAuBC,EAAQ,OAElBI,SAAuBtU,EAAMuU,cAAc,OAAQ,CACnFC,EAAG,yGACD,aAEJJ,EAAQ,EAAUC,C,2BCjBdJ,EAAyBC,EAAQ,MAEjCC,EAA0BD,EAAQ,MAKtCE,EAAQ,OAAU,EAElB,IAAIpU,EAAQmU,EAAwBD,EAAQ,OAIxCG,GAAW,EAFMJ,EAAuBC,EAAQ,OAElBI,SAAuBtU,EAAMuU,cAAc,OAAQ,CACnFC,EAAG,gNACD,iBAEJJ,EAAQ,EAAUC,C","sources":["../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","components/Customize/ExportCustomData.tsx","components/Customize/ImportCustomData.tsx","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","components/ListWithItemActions.tsx","components/Customize/CustomizeList.tsx","components/Customize/CustomizePanel.tsx","components/Customize/RulesForm.tsx","components/Customize/RulesPanel.tsx","components/Customize/SpellsForm.tsx","components/Customize/SpellsPanel.tsx","components/Customize/OptionsForm.tsx","components/Customize/UnitsForm.tsx","components/Customize/UnitsPanel.tsx","components/Customize/XenosRulesForm.tsx","components/Customize/XenosRulesPanel.tsx","components/Customize/CustomizeMenuContent.tsx","../node_modules/@material-ui/icons/AddCircle.js","../node_modules/@material-ui/icons/DeleteForever.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: alpha(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel,\n} from '@material-ui/core';\nimport produce from 'immer';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showFeedback } from 'store/appStateSlice';\nimport { getEmptyCustomData } from 'store/dataSlice';\nimport { CustomData, RootState } from 'store/types';\nimport copyToClipboard from 'utils/copyToClipboard';\n\nconst DataGroup: React.FC<{\n  data: CustomData;\n  setData: React.Dispatch<React.SetStateAction<CustomData>>;\n  customData: CustomData;\n  label: string;\n  type: keyof CustomData;\n}> = ({ data, setData, customData, label, type }) => {\n  const handleChange =\n    (type: keyof CustomData) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.target.checked) {\n        setData(\n          produce(data, (draft) => {\n            draft[type][event.target.name] = customData[type][event.target.name];\n          })\n        );\n      } else {\n        setData(\n          produce(data, (draft) => {\n            delete draft[type][event.target.name];\n          })\n        );\n      }\n    };\n\n  return (\n    <>\n      {Object.keys(customData[type]).length !== 0 && (\n        <>\n          <FormLabel>{label}</FormLabel>\n          <FormGroup>\n            {Object.keys(customData[type]).map((name) => (\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={data[type][name] !== undefined}\n                    onChange={handleChange(type)}\n                    name={name}\n                  />\n                }\n                label={name}\n                key={name}\n              />\n            ))}\n          </FormGroup>\n        </>\n      )}\n    </>\n  );\n};\n\nconst ExportCustomData: React.FC<{ open: boolean; handleClose: () => void }> = ({\n  open,\n  handleClose,\n}) => {\n  const [data, setData] = React.useState(getEmptyCustomData());\n  const customData = useSelector((state: RootState) => state.data.customData);\n  const dispatch = useDispatch();\n\n  const selectAll = () => setData(customData);\n  const selectNone = () => setData(getEmptyCustomData());\n\n  const nothingSelected = Object.values(data).every((v) => Object.keys(v).length === 0);\n  const somethingToSelect = Object.values(customData).some(\n    (v) => Object.keys(v).length !== 0\n  );\n\n  const exportCustomData = () => {\n    try {\n      const exportString = JSON.stringify(data);\n      copyToClipboard(exportString);\n      dispatch(showFeedback('Custom data copied to clipboard!', 'success'));\n      handleClose();\n    } catch (err) {\n      dispatch(showFeedback('Could not export the custom data!', 'error'));\n    }\n  };\n\n  const groupProps = { data: data, setData: setData, customData: customData };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Export custom data</DialogTitle>\n      <DialogContent>\n        <FormControl>\n          {somethingToSelect && (\n            <Box mb={1}>\n              <ButtonGroup size=\"small\" color=\"primary\" variant=\"text\">\n                <Button onClick={selectAll}>Select all</Button>\n                <Button onClick={selectNone}>Select none</Button>\n              </ButtonGroup>\n            </Box>\n          )}\n          <DataGroup label=\"Units\" type=\"unitData\" {...groupProps} />\n          <DataGroup label=\"Rules\" type=\"rulesData\" {...groupProps} />\n          <DataGroup label=\"Xenos Rules\" type=\"xenosRulesData\" {...groupProps} />\n          <DataGroup label=\"Psychic Powers\" type=\"psychicPowers\" {...groupProps} />\n        </FormControl>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={exportCustomData} disabled={nothingSelected} color=\"primary\">\n          Export\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ExportCustomData;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { showFeedback } from 'store/appStateSlice';\nimport { importCustomData } from 'store/dataSlice';\n\nconst ImportCustomData: React.FC<{ open: boolean; handleClose: () => void }> = ({\n  open,\n  handleClose,\n}) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState('');\n\n  const handleImport = () => {\n    if (!value) {\n      dispatch(showFeedback('You have to input some data!', 'error'));\n      return;\n    }\n    try {\n      const data = JSON.parse(value);\n      dispatch(importCustomData(data));\n      dispatch(showFeedback('Custom data imported!', 'success'));\n    } catch (err) {\n      dispatch(showFeedback('Could not import the custom data!', 'error'));\n    }\n  };\n\n  const handleKeyPressed = (key: string) => {\n    if (key === 'Enter') {\n      handleAction();\n    } else if (key === 'ESC') handleClose();\n  };\n\n  const handleAction = () => {\n    handleImport();\n    handleClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Enter the import string</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"normal\"\n          label=\"Import String\"\n          type=\"text\"\n          fullWidth\n          onChange={(e) => setValue(e.target.value)}\n          onKeyPress={(e) => handleKeyPressed(e.key)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAction} disabled={!value} color=\"primary\">\n          Import\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default React.memo(ImportCustomData);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import {\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  SvgIconTypeMap,\n} from '@material-ui/core';\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport React, { FC } from 'react';\n\ninterface ListWithItemActionsProps {\n  data: Object;\n  actionOneName?: string;\n  ActionOneIcon?: OverridableComponent<SvgIconTypeMap<{}, 'svg'>>;\n  handleClickActionOne: (name: string) => void;\n  actionTwoName?: string;\n  ActionTwoIcon?: OverridableComponent<SvgIconTypeMap<{}, 'svg'>>;\n  handleClickActionTwo: (name: string) => void;\n  actionSpecialName?: string;\n  ActionSpecialIcon?: OverridableComponent<SvgIconTypeMap<{}, 'svg'>>;\n  handleClickSpecialAction: () => void;\n}\n\nexport const ListWithItemActions: FC<ListWithItemActionsProps> = ({\n  data,\n  actionOneName = 'Edit',\n  ActionOneIcon = EditIcon,\n  handleClickActionOne,\n  actionTwoName = 'Delete',\n  ActionTwoIcon = DeleteForeverIcon,\n  handleClickActionTwo,\n  actionSpecialName = 'Add new',\n  ActionSpecialIcon = AddCircleIcon,\n  handleClickSpecialAction,\n}) => {\n  return (\n    <List>\n      {Object.keys(data).map((name) => (\n        <ListItem id={name} key={name}>\n          <ListItemIcon>\n            <IconButton\n              aria-label={actionOneName}\n              onClick={() => handleClickActionOne(name)}\n            >\n              <ActionOneIcon color=\"primary\" />\n            </IconButton>\n          </ListItemIcon>\n          <ListItemText>{name}</ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton\n              size=\"small\"\n              aria-label={actionTwoName}\n              onClick={() => handleClickActionTwo(name)}\n            >\n              <ActionTwoIcon color=\"action\" />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n      <ListItem id=\"add_fr\" key=\"add_fr\">\n        <Button\n          aria-label={actionSpecialName}\n          startIcon={<ActionSpecialIcon color=\"secondary\" />}\n          onClick={handleClickSpecialAction}\n        >\n          {actionSpecialName}\n        </Button>\n      </ListItem>\n    </List>\n  );\n};\n","import useOpen from 'hooks/useOpen';\nimport React, { useState } from 'react';\nimport { CustomDataElement } from 'store/types';\nimport { ListWithItemActions } from '../ListWithItemActions';\n\nexport interface CustomFormProps<T extends CustomDataElement> {\n  open: boolean;\n  handleClose: () => void;\n  initialState: T;\n  changeState: React.Dispatch<React.SetStateAction<T>>;\n  handleAction: () => void;\n  validateName: () => boolean;\n}\n\nexport interface CustomizeListProps<T extends CustomDataElement> {\n  data: { [name: string]: T };\n  CustomForm: React.FC<CustomFormProps<T>>;\n  emptyState: T;\n  removeFunc: (name: string) => void;\n  addFunc: (newState: T) => void;\n}\n\nfunction CustomizeList<T extends CustomDataElement>(props: CustomizeListProps<T>) {\n  const { data, CustomForm, emptyState, removeFunc, addFunc } = props;\n  const [open, handleOpen, handleClose] = useOpen(false);\n  const [state, setstate] = useState(emptyState);\n  const [originalName, setOriginalName] = useState('');\n\n  const validateName = (): boolean =>\n    state.name !== '' &&\n    Object.keys(data).every((name) => name === originalName || name !== state.name);\n\n  const handleAction = () => {\n    if (state.name !== originalName) {\n      removeFunc(originalName);\n    }\n    if (validateName()) {\n      addFunc(state);\n      handleClose();\n    }\n  };\n\n  const handleEdit = (name: string) => {\n    setstate(data[name]);\n    setOriginalName(name);\n    handleOpen();\n  };\n\n  const handleAdd = () => {\n    setstate(emptyState);\n    setOriginalName('');\n    handleOpen();\n  };\n\n  return (\n    <>\n      <ListWithItemActions\n        data={data}\n        handleClickActionOne={handleEdit}\n        handleClickActionTwo={removeFunc}\n        handleClickSpecialAction={handleAdd}\n      />\n      <CustomForm\n        open={open}\n        handleClose={handleClose}\n        handleAction={handleAction}\n        initialState={state}\n        changeState={setstate}\n        validateName={validateName}\n      />\n    </>\n  );\n}\n\nexport default CustomizeList;\n","import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport React from 'react';\nimport { CustomDataElement } from 'store/types';\nimport CustomizeList, { CustomizeListProps } from './CustomizeList';\n\ninterface CustomizePanelProps<T extends CustomDataElement>\n  extends CustomizeListProps<T> {\n  name: string;\n  id: string;\n  expanded: string;\n  handleChange: (\n    name: string\n  ) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => void;\n}\n\nfunction CustomizePanel<T extends CustomDataElement>(props: CustomizePanelProps<T>) {\n  const {\n    name,\n    id,\n    expanded,\n    handleChange,\n    data,\n    CustomForm,\n    emptyState,\n    removeFunc,\n    addFunc,\n  } = props;\n\n  return (\n    <Accordion expanded={expanded === name} onChange={handleChange(name)}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={id + '-content'}\n        id={id + '-header'}\n      >\n        <Typography>Manage {name}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <CustomizeList<T>\n          data={data}\n          CustomForm={CustomForm}\n          emptyState={emptyState}\n          removeFunc={removeFunc}\n          addFunc={addFunc}\n        />\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nexport default CustomizePanel;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from '@material-ui/core';\nimport React from 'react';\nimport { Rule } from 'store/types';\nimport { CustomFormProps } from './CustomizeList';\n\nfunction RulesForm(props: CustomFormProps<Rule>) {\n  const { open, handleClose, initialState, changeState, handleAction, validateName } =\n    props;\n  const rule = initialState;\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Rule</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          value={rule.name}\n          onChange={(e) => changeState({ ...rule, name: e.target.value })}\n          error={!validateName()}\n          helperText=\"You have to choose a unique name!\"\n        />\n        <TextField\n          label=\"Description\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          multiline\n          value={rule.description}\n          onChange={(e) => changeState({ ...rule, description: e.target.value })}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAction} color=\"primary\" disabled={!validateName()}>\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default RulesForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showFeedback } from 'store/appStateSlice';\nimport { addRule, removeRule } from 'store/dataSlice';\nimport { AppDispatch, RootState, Rule } from 'store/types';\nimport { PanelProps } from './CustomizeMenu';\nimport CustomizePanel from './CustomizePanel';\nimport RulesForm from './RulesForm';\n\nfunction RulesPanel(props: PanelProps) {\n  const { expanded, handleChange } = props;\n  const dispatch: AppDispatch = useDispatch();\n  const customData = useSelector((state: RootState) => state.data.customData);\n  const units = useSelector((state: RootState) => state.roster.units);\n\n  const removeFunc = (name: string) => {\n    if (\n      Object.values(units).some((unit) => unit.rules.includes(name)) ||\n      Object.values(customData.unitData).some((unit) => unit.rules.includes(name))\n    ) {\n      dispatch(showFeedback(`You can't delete a rule currently in use!`, 'error'));\n    } else dispatch(removeRule(name));\n  };\n  const addFunc = (rule: Rule) => dispatch(addRule(rule));\n\n  return (\n    <CustomizePanel<Rule>\n      name=\"Rules\"\n      id=\"rules\"\n      expanded={expanded}\n      handleChange={handleChange}\n      data={customData.rulesData}\n      CustomForm={RulesForm}\n      emptyState={{\n        name: 'Name',\n        description: 'Description',\n      }}\n      removeFunc={removeFunc}\n      addFunc={addFunc}\n    />\n  );\n}\n\nexport default React.memo(RulesPanel);\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\nimport React from 'react';\nimport { PsychicPower } from 'store/types';\nimport range from 'utils/range';\nimport { CustomFormProps } from './CustomizeList';\n\nfunction SpellsForm(props: CustomFormProps<PsychicPower>) {\n  const { open, handleClose, initialState, changeState, handleAction, validateName } =\n    props;\n  const spell = initialState;\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Spell</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          value={spell.name}\n          onChange={(e) => changeState({ ...spell, name: e.target.value })}\n          error={!validateName()}\n          helperText=\"You have to choose a unique name!\"\n        />\n        <TextField\n          label=\"Difficulty\"\n          type=\"number\"\n          margin=\"normal\"\n          select\n          SelectProps={{\n            value: spell.difficulty,\n            onChange: (e) =>\n              changeState({ ...spell, difficulty: e.target.value as number }),\n          }}\n        >\n          {range(2, 12).map((value) => (\n            <MenuItem key={value} value={value}>\n              {value}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          label=\"Target\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          value={spell.target}\n          onChange={(e) => changeState({ ...spell, target: e.target.value })}\n        />\n        <TextField\n          label=\"Duration\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          value={spell.duration}\n          onChange={(e) => changeState({ ...spell, duration: e.target.value })}\n        />\n        <TextField\n          label=\"Effekt\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          multiline\n          value={spell.effect}\n          onChange={(e) => changeState({ ...spell, effect: e.target.value })}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAction} color=\"primary\" disabled={!validateName()}>\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default SpellsForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addSpell, removeSpell } from 'store/dataSlice';\nimport { AppDispatch, PsychicPower, RootState } from 'store/types';\nimport { PanelProps } from './CustomizeMenu';\nimport CustomizePanel from './CustomizePanel';\nimport SpellsForm from './SpellsForm';\n\nfunction SpellsPanel(props: PanelProps) {\n  const { expanded, handleChange } = props;\n  const dispatch: AppDispatch = useDispatch();\n  const customData = useSelector(\n    (state: RootState) => state.data.customData.psychicPowers\n  );\n\n  const removeFunc = (name: string) => dispatch(removeSpell(name));\n  const addFunc = (spell: PsychicPower) => dispatch(addSpell(spell));\n\n  return (\n    <CustomizePanel<PsychicPower>\n      name=\"Spells\"\n      id=\"spells\"\n      expanded={expanded}\n      handleChange={handleChange}\n      data={customData}\n      CustomForm={SpellsForm}\n      emptyState={{\n        name: 'Name',\n        difficulty: 7,\n        target: 'Target',\n        duration: 'Duration',\n        effect: 'Effekt',\n      }}\n      removeFunc={removeFunc}\n      addFunc={addFunc}\n    />\n  );\n}\n\nexport default React.memo(SpellsPanel);\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  InputLabel,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Select,\n  TextField,\n} from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport produce from 'immer';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { DataUnit, RootState, UnitOption, UnitStats } from 'store/types';\nimport range from 'utils/range';\nimport statData from 'utils/statData';\n\nconst OptionsForm: React.FC<{\n  open: boolean;\n  handleClose: () => void;\n  name: string;\n  option: UnitOption;\n  unit: DataUnit;\n  changeState: (value: React.SetStateAction<DataUnit>) => void;\n  changeName: (name: string) => void;\n  changeOption: (option: UnitOption) => void;\n}> = ({\n  open,\n  handleClose,\n  name,\n  option,\n  unit,\n  changeState,\n  changeName,\n  changeOption,\n}) => {\n  const specialRules = useSelector((state: RootState) => state.data.rulesData);\n  const [anchorSetStat, setAnchorSetStat] = React.useState<null | HTMLElement>(null);\n\n  const handleClickSetStat = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorSetStat(event.currentTarget);\n  };\n\n  const handleCloseSetStat = () => {\n    setAnchorSetStat(null);\n  };\n\n  const onClickSetStat = (name: keyof UnitStats) => () => {\n    changeOption({\n      ...option,\n      setStats: {\n        ...option.setStats,\n        [name]: 4,\n      },\n    });\n    handleCloseSetStat();\n  };\n\n  const handleAction = () => {\n    changeState({\n      ...unit,\n      options: { ...unit.options, [name]: option },\n    });\n    handleClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Option</DialogTitle>\n      <DialogContent>\n        {/* ---------------------------------- Name --------------------------------- */}\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          value={name}\n          onChange={(e) => changeName(e.target.value)}\n          error={name === ''}\n          helperText=\"You have to choose a name!\"\n        />\n        {/* --------------------------------- Points -------------------------------- */}\n        <TextField\n          label=\"Points\"\n          margin=\"normal\"\n          type=\"number\"\n          select\n          SelectProps={{\n            value: option.points,\n            onChange: (e) =>\n              changeOption({\n                ...option,\n                points: e.target.value as number,\n              }),\n          }}\n        >\n          {range(-4, 6).map((value) => (\n            <MenuItem key={value} value={value}>\n              {value}\n            </MenuItem>\n          ))}\n        </TextField>\n        {/* -------------------------------- Summary -------------------------------- */}\n        <TextField\n          label=\"Summary\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          multiline\n          value={option.description || ''}\n          onChange={(e) =>\n            changeOption({\n              ...option,\n              description: e.target.value,\n            })\n          }\n        />\n        {/* ------------------------------ Remove Rules ----------------------------- */}\n        <InputLabel id=\"remove-rules-label\" style={{ marginTop: 15 }}>\n          Remove Rules\n        </InputLabel>\n        <Select\n          multiple\n          id=\"remove-rules\"\n          labelId=\"remove-rules-label\"\n          value={option.remove || []}\n          onChange={(e) =>\n            changeOption({ ...option, remove: e.target.value as string[] })\n          }\n        >\n          {unit.rules.map((rule) => (\n            <MenuItem key={rule} value={rule}>\n              {rule}\n            </MenuItem>\n          ))}\n        </Select>\n        {/* ------------------------------- Add Rules ------------------------------- */}\n        <InputLabel id=\"add-rules-label\" style={{ marginTop: 15 }}>\n          Add Rules\n        </InputLabel>\n        <Select\n          multiple\n          id=\"add-rules\"\n          labelId=\"add-rules-label\"\n          value={option.add || []}\n          onChange={(e) => changeOption({ ...option, add: e.target.value as string[] })}\n        >\n          {Object.keys(specialRules).map((rule) => (\n            <MenuItem key={rule} value={rule}>\n              {rule}\n            </MenuItem>\n          ))}\n        </Select>\n        {/* ------------------------------- Set Stats ------------------------------- */}\n        <InputLabel id=\"options-label\" style={{ marginTop: 15 }}>\n          Set Stats\n        </InputLabel>\n        <List>\n          {option.setStats &&\n            Object.keys(option.setStats).map((name) => (\n              <ListItem id={name} key={name}>\n                <ListItemText>{statData[name].name}</ListItemText>\n                <Select\n                  value={option.setStats ? option.setStats[name as keyof UnitStats] : 0}\n                  type=\"number\"\n                  onChange={(e) =>\n                    changeOption({\n                      ...option,\n                      setStats: {\n                        ...option.setStats,\n                        [name]: e.target.value as number,\n                      },\n                    })\n                  }\n                >\n                  {statData[name].range.map((value) => (\n                    <MenuItem key={value} value={value}>\n                      {value}\n                    </MenuItem>\n                  ))}\n                </Select>\n                <ListItemSecondaryAction>\n                  <IconButton\n                    size=\"small\"\n                    aria-label=\"Delete\"\n                    onClick={() =>\n                      changeOption(\n                        produce(option, (draft) => {\n                          if (draft.setStats)\n                            delete draft.setStats[name as keyof UnitStats];\n                        })\n                      )\n                    }\n                  >\n                    <DeleteForeverIcon color=\"action\" />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            ))}\n          <ListItem id=\"add_opt\" key=\"add_opt\">\n            <Button onClick={handleClickSetStat} startIcon={<AddCircleIcon />}>\n              Add Stat\n            </Button>\n            <Menu\n              id=\"add-stat-menu\"\n              anchorEl={anchorSetStat}\n              keepMounted\n              open={Boolean(anchorSetStat)}\n              onClose={handleCloseSetStat}\n            >\n              {Object.keys(statData)\n                .filter((k) => !Object.keys(option.setStats || {}).includes(k))\n                .map((name) => (\n                  <MenuItem\n                    onClick={onClickSetStat(name as keyof UnitStats)}\n                    key={name}\n                  >\n                    {statData[name].name}\n                  </MenuItem>\n                ))}\n            </Menu>\n          </ListItem>\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAction} color=\"primary\" disabled={name === ''}>\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default OptionsForm;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport useOpen from 'hooks/useOpen';\nimport produce from 'immer';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { DataUnit, RootState, UnitOption, UnitStats } from 'store/types';\nimport range from 'utils/range';\nimport statData from 'utils/statData';\nimport { ListWithItemActions } from '../ListWithItemActions';\nimport { CustomFormProps } from './CustomizeList';\nimport OptionsForm from './OptionsForm';\n\nconst emptyOption = {\n  name: '',\n  points: 0,\n  description: '',\n};\n\nconst SelectStat: React.FC<{\n  stat: keyof UnitStats;\n  unit: DataUnit;\n  changeState: React.Dispatch<React.SetStateAction<DataUnit>>;\n  isPhone: boolean;\n}> = ({ stat, unit, changeState, isPhone }) => {\n  const data = statData[stat];\n\n  return (\n    <>\n      <TableCell>{isPhone ? data.shortName : data.name}</TableCell>\n      <TableCell>\n        <Select\n          value={unit.stats[stat]}\n          type=\"number\"\n          onChange={(e) =>\n            changeState({\n              ...unit,\n              stats: { ...unit.stats, [stat]: e.target.value as number },\n            })\n          }\n        >\n          {data.range.map((value) => (\n            <MenuItem key={value} value={value}>\n              {value}\n            </MenuItem>\n          ))}\n        </Select>\n      </TableCell>\n    </>\n  );\n};\n\nfunction UnitsForm(props: CustomFormProps<DataUnit>) {\n  const { open, handleClose, initialState, changeState, handleAction, validateName } =\n    props;\n  const theme = useTheme();\n  const isPhone = useMediaQuery(theme.breakpoints.down('xs'));\n  const unit = initialState;\n  const rules = useSelector((state: RootState) => state.data.rulesData);\n  const [optionsOpen, handleOpenOptions, handleCloseOptions] = useOpen();\n  const [currentOption, setCurrentOption] = useState<UnitOption>({ ...emptyOption });\n  const [currentOptionName, setCurrentOptionName] = useState('Name');\n  const selectProps = { unit: unit, changeState: changeState, isPhone: isPhone };\n\n  const handleOptionEdit = (name: string) => {\n    setCurrentOption(unit.options[name]);\n    setCurrentOptionName(name);\n    handleOpenOptions();\n  };\n\n  const handleOptionDelete = (name: string) => {\n    changeState(\n      produce(unit, (draft) => {\n        delete draft.options[name];\n      })\n    );\n  };\n\n  const handleOptionAdd = () => {\n    setCurrentOption(emptyOption);\n    setCurrentOptionName('Name');\n    handleOpenOptions();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Unit</DialogTitle>\n      <DialogContent>\n        <FormControl>\n          {/* --------------------------------- Name -------------------------------- */}\n          <TextField\n            label=\"Name\"\n            type=\"text\"\n            margin=\"normal\"\n            fullWidth\n            value={unit.name}\n            onChange={(e) => changeState({ ...unit, name: e.target.value })}\n            error={!validateName()}\n            helperText=\"You have to choose a unique name!\"\n          />\n          {/* -------------------------------- Points ------------------------------- */}\n          <TextField\n            label=\"Points\"\n            margin=\"normal\"\n            type=\"number\"\n            select\n            SelectProps={{\n              value: unit.points,\n              onChange: (e) =>\n                changeState({\n                  ...unit,\n                  points: e.target.value as number,\n                }),\n            }}\n          >\n            {range(1, 10).map((value) => (\n              <MenuItem key={value} value={value}>\n                {value}\n              </MenuItem>\n            ))}\n          </TextField>\n          {/* --------------------------- Strength Points --------------------------- */}\n          <TextField\n            label=\"Strength&nbsp;Points\"\n            margin=\"normal\"\n            type=\"number\"\n            select\n            SelectProps={{\n              value: unit.stats.strengthPoints,\n              onChange: (e) =>\n                changeState({\n                  ...unit,\n                  stats: { ...unit.stats, strengthPoints: e.target.value as number },\n                }),\n            }}\n          >\n            {[6, 12].map((value) => (\n              <MenuItem key={value} value={value}>\n                {value}\n              </MenuItem>\n            ))}\n          </TextField>\n        </FormControl>\n        {/* --------------------------------- Stats --------------------------------- */}\n        <InputLabel id=\"stats-label\" style={{ marginTop: 15 }}>\n          Stats\n        </InputLabel>\n        <TableContainer style={{ marginBottom: 20 }}>\n          <Table size=\"small\">\n            <TableBody>\n              <TableRow>\n                <SelectStat stat=\"attack\" {...selectProps} />\n                <SelectStat stat=\"attackValue\" {...selectProps} />\n              </TableRow>\n              <TableRow>\n                <SelectStat stat=\"move\" {...selectProps} />\n                <SelectStat stat=\"defenceValue\" {...selectProps} />\n              </TableRow>\n              <TableRow>\n                <SelectStat stat=\"shoot\" {...selectProps} />\n                <SelectStat stat=\"shootValue\" {...selectProps} />\n              </TableRow>\n              <TableRow>\n                <SelectStat stat=\"courage\" {...selectProps} />\n                <SelectStat stat=\"shootRange\" {...selectProps} />\n              </TableRow>\n              <TableRow>\n                <SelectStat stat=\"armor\" {...selectProps} />\n                <SelectStat stat=\"movement\" {...selectProps} />\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {/* --------------------------------- Rules --------------------------------- */}\n        <InputLabel id=\"rules-label\" style={{ marginTop: 15 }}>\n          Rules\n        </InputLabel>\n        <Select\n          multiple\n          id=\"rules\"\n          labelId=\"rules-label\"\n          value={unit.rules}\n          onChange={(e) => changeState({ ...unit, rules: e.target.value as string[] })}\n        >\n          {Object.keys(rules).map((rule) => (\n            <MenuItem key={rule} value={rule}>\n              {rule}\n            </MenuItem>\n          ))}\n        </Select>\n        {/* -------------------------------- Options -------------------------------- */}\n        <InputLabel id=\"options-label\" style={{ marginTop: 15 }}>\n          Options\n        </InputLabel>\n        <ListWithItemActions\n          data={unit.options}\n          handleClickActionOne={handleOptionEdit}\n          handleClickActionTwo={handleOptionDelete}\n          handleClickSpecialAction={handleOptionAdd}\n        />\n        <OptionsForm\n          open={optionsOpen}\n          handleClose={handleCloseOptions}\n          name={currentOptionName}\n          option={currentOption}\n          unit={unit}\n          changeOption={setCurrentOption}\n          changeName={setCurrentOptionName}\n          changeState={changeState}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAction} color=\"primary\" disabled={!validateName()}>\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default UnitsForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showFeedback } from 'store/appStateSlice';\nimport { addUnit, removeUnit } from 'store/dataSlice';\nimport { AppDispatch, DataUnit, RootState } from 'store/types';\nimport { PanelProps } from './CustomizeMenu';\nimport CustomizePanel from './CustomizePanel';\nimport UnitsForm from './UnitsForm';\n\nfunction UnitsPanel(props: PanelProps) {\n  const { expanded, handleChange } = props;\n  const dispatch: AppDispatch = useDispatch();\n  const customData = useSelector((state: RootState) => state.data.customData.unitData);\n  const units = useSelector((state: RootState) => state.roster.units);\n\n  const removeFunc = (name: string) => {\n    if (Object.values(units).some((unit) => unit.name === name)) {\n      dispatch(showFeedback(`You can't delete a unit currently in use!`, 'error'));\n    } else dispatch(removeUnit(name));\n  };\n  const addFunc = (unit: DataUnit) => dispatch(addUnit(unit));\n\n  return (\n    <CustomizePanel<DataUnit>\n      name=\"Units\"\n      id=\"units\"\n      expanded={expanded}\n      handleChange={handleChange}\n      data={customData}\n      CustomForm={UnitsForm}\n      emptyState={{\n        name: 'Name',\n        type: 'foot',\n        points: 4,\n        stats: {\n          attack: 5,\n          move: 6,\n          shoot: 0,\n          courage: 4,\n          armor: 0,\n          attackValue: 5,\n          defenceValue: 5,\n          shootValue: 0,\n          shootRange: 0,\n          movement: 6,\n          strengthPoints: 12,\n        },\n        freeActivations: [],\n        rules: [],\n        options: {},\n        xenosRules: [],\n      }}\n      removeFunc={removeFunc}\n      addFunc={addFunc}\n    />\n  );\n}\n\nexport default React.memo(UnitsPanel);\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUnitNames } from 'store/dataSlice';\nimport { RootState, XenosRule } from 'store/types';\nimport range from 'utils/range';\nimport { CustomFormProps } from './CustomizeList';\n\nfunction XenosRulesForm(props: CustomFormProps<XenosRule>) {\n  const { open, handleClose, initialState, changeState, handleAction, validateName } =\n    props;\n  const rule = initialState;\n  const units = useSelector((state: RootState) => selectUnitNames(state));\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <DialogTitle>Xenos Rule</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          value={rule.name}\n          onChange={(e) => changeState({ ...rule, name: e.target.value })}\n          error={!validateName()}\n          helperText=\"You have to choose a unique name!\"\n        />\n        <TextField\n          label=\"Points\"\n          margin=\"normal\"\n          type=\"number\"\n          select\n          SelectProps={{\n            value: rule.points,\n            onChange: (e) => changeState({ ...rule, points: e.target.value as number }),\n          }}\n        >\n          {range(-4, 6).map((value) => (\n            <MenuItem key={value} value={value}>\n              {value}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          label=\"Description\"\n          type=\"text\"\n          margin=\"normal\"\n          fullWidth\n          multiline\n          value={rule.description}\n          onChange={(e) => changeState({ ...rule, description: e.target.value })}\n        />\n        <TextField\n          label=\"Exclude&nbsp;Units\"\n          margin=\"normal\"\n          select\n          SelectProps={{\n            multiple: true,\n            value: rule.exclude_units,\n            onChange: (e) =>\n              changeState({ ...rule, exclude_units: e.target.value as string[] }),\n          }}\n        >\n          {units.map((name) => (\n            <MenuItem key={name} value={name}>\n              {name}\n            </MenuItem>\n          ))}\n        </TextField>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAction} color=\"primary\" disabled={!validateName()}>\n          Okay\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default XenosRulesForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showFeedback } from 'store/appStateSlice';\nimport { addXenosRule, removeXenosRule } from 'store/dataSlice';\nimport { AppDispatch, RootState, XenosRule } from 'store/types';\nimport { PanelProps } from './CustomizeMenu';\nimport CustomizePanel from './CustomizePanel';\nimport XenosRulesForm from './XenosRulesForm';\n\nfunction XenosRulesPanel(props: PanelProps) {\n  const { expanded, handleChange } = props;\n  const dispatch: AppDispatch = useDispatch();\n  const customData = useSelector(\n    (state: RootState) => state.data.customData.xenosRulesData\n  );\n  const units = useSelector((state: RootState) => state.roster.units);\n\n  const removeFunc = (name: string) => {\n    if (Object.values(units).some((unit) => unit.xenosRules.includes(name))) {\n      dispatch(showFeedback(`You can't delete a rule currently in use!`, 'error'));\n    } else dispatch(removeXenosRule(name));\n  };\n  const addFunc = (rule: XenosRule) => dispatch(addXenosRule(rule));\n\n  return (\n    <CustomizePanel<XenosRule>\n      name=\"xenos Rules\"\n      id=\"xenos-rules\"\n      expanded={expanded}\n      handleChange={handleChange}\n      data={customData}\n      CustomForm={XenosRulesForm}\n      emptyState={{\n        name: 'Name',\n        points: 0,\n        exclude_units: ['Ravenous Hordes'],\n        description: 'Description',\n      }}\n      removeFunc={removeFunc}\n      addFunc={addFunc}\n    />\n  );\n}\n\nexport default React.memo(XenosRulesPanel);\n","import { Box, Button, ButtonGroup, DialogTitle } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ShareIcon from '@material-ui/icons/Share';\nimport useOpen from 'hooks/useOpen';\nimport React, { useCallback, useState } from 'react';\nimport ExportCustomData from './ExportCustomData';\nimport ImportCustomData from './ImportCustomData';\nimport RulesPanel from './RulesPanel';\nimport SpellsPanel from './SpellsPanel';\nimport UnitsPanel from './UnitsPanel';\nimport XenosRulesPanel from './XenosRulesPanel';\n\nconst CustomizeMenuContent = () => {\n  const [expanded, setExpanded] = useState<string>('');\n  const [openImport, handleOpenImport, handleCloseImport] = useOpen();\n  const [openExport, handleOpenExport, handleCloseExport] = useOpen();\n\n  const handleChange = useCallback(\n    (panel: string) => (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\n      setExpanded(isExpanded ? panel : '');\n    },\n    []\n  );\n\n  return (\n    <>\n      <DialogTitle>Customize</DialogTitle>\n      <UnitsPanel expanded={expanded} handleChange={handleChange} />\n      <XenosRulesPanel expanded={expanded} handleChange={handleChange} />\n      <RulesPanel expanded={expanded} handleChange={handleChange} />\n      <SpellsPanel expanded={expanded} handleChange={handleChange} />\n      <Box m={2} mx=\"auto\">\n        <ButtonGroup color=\"primary\" variant=\"outlined\">\n          <Button\n            aria-label=\"Import custom data\"\n            startIcon={<GetAppIcon />}\n            onClick={() => handleOpenImport()}\n          >\n            Import\n          </Button>\n          <Button\n            aria-label=\"Export custom data\"\n            startIcon={<ShareIcon />}\n            onClick={() => handleOpenExport()}\n          >\n            Export\n          </Button>\n        </ButtonGroup>\n      </Box>\n      <ImportCustomData open={openImport} handleClose={handleCloseImport} />\n      <ExportCustomData open={openExport} handleClose={handleCloseExport} />\n    </>\n  );\n};\n\nexport default React.memo(CustomizeMenuContent);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z\"\n}), 'AddCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\n\nexports.default = _default;"],"names":["Button","ButtonGroup","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","size","_props$variant","variant","other","_objectWithoutProperties","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","root","contained","vertical","child","withStyles","theme","display","borderRadius","shape","boxShadow","shadows","width","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","type","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","alpha","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","marginTop","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","name","FormGroup","_props$row","row","flexWrap","DataGroup","data","setData","customData","label","handleChange","event","target","checked","produce","draft","Object","keys","length","FormLabel","map","FormControlLabel","control","Checkbox","undefined","onChange","open","handleClose","getEmptyCustomData","useSelector","state","dispatch","useDispatch","nothingSelected","values","every","v","somethingToSelect","some","groupProps","Dialog","onClose","DialogTitle","DialogContent","FormControl","Box","mb","onClick","DialogActions","exportString","JSON","stringify","copyToClipboard","showFeedback","err","ImportCustomData","value","setValue","handleAction","parse","importCustomData","handleImport","TextField","autoFocus","margin","e","onKeyPress","key","ListItemSecondaryAction","muiName","position","right","top","transform","ListWithItemActions","actionOneName","ActionOneIcon","EditIcon","handleClickActionOne","actionTwoName","ActionTwoIcon","DeleteForeverIcon","handleClickActionTwo","actionSpecialName","ActionSpecialIcon","AddCircleIcon","handleClickSpecialAction","List","ListItem","id","ListItemIcon","IconButton","ListItemText","startIcon","CustomForm","emptyState","removeFunc","addFunc","useOpen","handleOpen","useState","setstate","originalName","setOriginalName","validateName","initialState","changeState","expanded","Accordion","AccordionSummary","expandIcon","ExpandMore","Typography","AccordionDetails","rule","error","helperText","multiline","description","RulesPanel","units","roster","rulesData","RulesForm","unit","rules","includes","unitData","removeRule","addRule","spell","select","SelectProps","difficulty","range","MenuItem","duration","effect","SpellsPanel","psychicPowers","SpellsForm","removeSpell","addSpell","option","changeName","changeOption","specialRules","anchorSetStat","setAnchorSetStat","handleCloseSetStat","onClickSetStat","setStats","points","InputLabel","style","Select","multiple","labelId","remove","add","statData","DeleteForever","currentTarget","AddCircle","Menu","anchorEl","keepMounted","Boolean","filter","k","options","emptyOption","SelectStat","stat","isPhone","TableCell","shortName","stats","useTheme","useMediaQuery","breakpoints","down","optionsOpen","handleOpenOptions","handleCloseOptions","currentOption","setCurrentOption","currentOptionName","setCurrentOptionName","selectProps","strengthPoints","TableContainer","marginBottom","Table","TableBody","TableRow","UnitsPanel","UnitsForm","attack","move","shoot","courage","armor","attackValue","defenceValue","shootValue","shootRange","movement","freeActivations","xenosRules","removeUnit","addUnit","selectUnitNames","exclude_units","XenosRulesPanel","xenosRulesData","XenosRulesForm","removeXenosRule","addXenosRule","CustomizeMenuContent","setExpanded","openImport","handleOpenImport","handleCloseImport","openExport","handleOpenExport","handleCloseExport","useCallback","panel","isExpanded","m","mx","GetApp","Share","_interopRequireDefault","require","_interopRequireWildcard","exports","_default","default","createElement","d"],"sourceRoot":""}